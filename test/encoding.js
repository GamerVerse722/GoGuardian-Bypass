javascript:
function codeRunner() {
    title_Name = document.title;
    const html = "<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0, shrink-to-fit=no" name="viewport"/>
<title>Goguardian Bypass</title>
<link crossorigin="anonymous" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" rel="stylesheet"/>
<script crossorigin="anonymous" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://fonts.googleapis.com/css?family=Quicksand&amp;display=swap" rel="stylesheet"/>
<link crossorigin="anonymous" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" referrerpolicy="no-referrer" rel="stylesheet">
</link><link href="data:image/x-icon;base64,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" rel="icon" type="image/x-icon"/><style>
section {
  width: 100%;
  height: 238px;
  border: none;
  overflow: hidden;
}
#tsparticles {
  position: fixed;
  width: 100%;
  height: 100%;
}
body {
  z-index: -99999;
}
#tsparticles {
  z-index: -10;
}
</style><style>
</style><style>
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}
.switch input {
  display: none;
}
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}
.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}
input:checked + .slider {
  background-color: #2196F3;
}
input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}
input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}
.slider.round {
  border-radius: 34px;
}
.slider.round:before {
  border-radius: 50%;
}
</style><style>
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}
.switch input {
  display: none;
}
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}
.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}
input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}
.slider.round {
  border-radius: 34px;
}
.slider.round:before {
  border-radius: 50%;
}
</style><style>
#addnew-form input {
  font-size: 14px;
  margin-top: 10px;
  padding-left: 16px;
}
fieldset {
  margin: 0;
  /*padding: 2rem;*/
  box-sizing: border-box;
  display: block;
  border: none;
  /*border: solid 1px #CCC;*/
  min-width: 0;
  background-color: #FFF;
}
fieldset legend {
  margin: 0 0 1.5rem;
  padding: 0;
  width: 100%;
  float: left;
  display: table;
  font-size: 1.5rem;
  line-height: 140%;
  font-weight: 600;
  color: #333;
}
fieldset legend + * {
  clear: both;
}
.toggle {
  margin: 0 0 1.5rem;
  box-sizing: border-box;
  font-size: 0;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: stretch;
}
.toggle input {
  width: 0;
  height: 0;
  position: absolute;
  left: -9999px;
}
.toggle input + label {
  margin: 0;
  padding: .75rem 2rem;
  box-sizing: border-box;
  position: relative;
  display: inline-block;
  border: solid 1px #DDD;
  background-color: #FFF;
  font-size: 1rem;
  line-height: 140%;
  font-weight: 600;
  text-align: center;
  box-shadow: 0 0 0 rgba(255, 255, 255, 0);
  transition: border-color .15s ease-out, color .25s ease-out, background-color .15s ease-out, box-shadow .15s ease-out;
}
.toggle input + label:first-of-type {
  border-radius: 6px 0 0 6px;
  border-right: none;
}
.toggle input + label:last-of-type {
  border-radius: 0 6px 6px 0;
  border-left: none;
}
.toggle input:hover + label {
  border-color: #213140;
}
.toggle input:checked + label {
  background-color: #4B9DEA;
  color: #FFF;
  box-shadow: 0 0 10px rgba(102, 179, 251, 0.5);
  border-color: #4B9DEA;
  z-index: 1;
}
.toggle input:focus + label {
  outline: dotted 1px #CCC;
  outline-offset: .45rem;
}
@media (max-width: 800px) {
  .toggle input + label {
    padding: .75rem .25rem;
    flex: 0 0 50%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
</style><style>
body{
	background-color: black;
}
::-webkit-scrollbar {
	width: 12px;
	background-color: #202324;
	color: #aba499;
}
::-webkit-scrollbar-track {
	border-radius: 10px;
	background-color: #F5F5F5;
}
::-webkit-scrollbar-corner {
	background-color: #181a1b;
}
::-webkit-scrollbar-thumb {
	border-radius: 12px;
	background-color: #454a4d;
}
input {
	border-radius: 10px;
	border-width: 2.5px;
	border-style: solid;
	background-color: rgb(59, 59, 59);
	border-color: rgb(113, 113, 113);
	color: rgb(255,255,255);
}
.config {
	position: absolute;
	top: 0;
	right: 0;
	margin: 0.5em;
	text-align: center;
}
.config .shift {
	text-align: right;
	display: inline-block;
	width: 100%
}
.addMargin {
	margin: 0.13rem;
}
.icon, label, h2, span, p, i, td{
	color: rgb(255,255,255)
}
.social-media {
	position: absolute;
	bottom: 0;
	left: 0;
}
.email-area {
	position: absolute;
	bottom: 0;
	right: 0;
}
.TopLeftMove {
	position: absolute;
	top: 0;
	left: 0;
	margin: 0.5em;
}
td {
	padding-left: 2px;
	padding-right: 2px;
}
button, #MySelectMenu {
	margin-left: 2px;
	margin-right: 2px;
}</style></head>
<body>
<div class="needHidden" id="tsparticles" style="background: #000000;text-align: center;"></div><iframe id="ifr" src="" style="position:fixed; top:0; left:0; bottom:0; right:0; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:-10;" title="site bypass" visibility="hidden">
</iframe>
<div class="needHidden" style="text-align: center;">
<h1 style="margin-top: 75px;font-family: Quicksand, sans-serif;color: rgb(255,255,255);">GoGuardian
				Bypasser
			</h1>
<p style="font-family: Quicksand, sans-serif;color: rgb(255,255,255);">goguardian
				more like noguardian amirite
			</p>
<input id="urlInput" type="text" value="https://"/>
</div>
<div class="needHidden" id="buttonDiv" style="text-align: center;margin-top: 10px;"><button class="btn btn-secondary" id="submit" onclick="url_input();" style="text-align: center;" type="button">Go!</button></div>
<div class="needHidden" style="background: rgba(218,218,218,0);margin-top: 50px;">
<p style="text-align: center;font-family: Quicksand, sans-serif;color: rgb(255,255,255);">Drag
				this link to your
				bookmarkbar <span id="newestVersion"></span>: <a class="aTag" href="javascript:req = new XMLHttpRequest();req.open('GET', 'https://raw.githubusercontent.com/GamerVerse722/GoGuardian-Bypass/main/assets/js/request.js');req.onload = function() {	eval(this.responseText + 'codeRunner();');};req.send();" name="this" style="text-align: center;">Bypass on any website</a></p>
<div id="aboutSection">
<h1 style="text-align: center;font-family: Quicksand, sans-serif;color: rgb(255,255,255);">About</h1>
<p style="text-align: center;font-family: Quicksand, sans-serif;color: rgb(255,255,255);">[IMPORTANT
				NOTE] Some
				websites will not work, this is due to website owners being annoying and not
				letting me embed them. Sorry
				:3<br/><br/>This website is a sole proof-of-concept showing just how flawed
				GoGuardian is. It's literally the
				most
				incompetent piece of paid software I may have ever seen.<br/>Not only can it
				be bypassed using a few lines of
				code,
				but it can also be outright stopped from sending data to the teachers to
				track what you're doing, by using
				AdGuard
				DNS (94.140.14.14).<br/>This is a POC showing how flawed GoGuardian is for
				the price, and how other, much
				less
				expensive, if not, free, options are much better.<br/><br/><a class="aTag" href="https://github.com/Winterfoxxy-0/GoGuardian-Bypass" style="text-align: center;">Original GitHub
					from creator</a></p></div>
</div>
<!-- Work in Progress -->
<div class="needHidden" style="text-align: center;">
<select id="MySelectMenu" style="border-radius: 10px;border-width: 2.5px;border-style: solid;background-color: rgb(59, 59, 59);border-color: rgb(113, 113, 113);color: rgb(255,255,255);font-family: Quicksand">
<option href="Blank">Options</option>
<option href="https://www.twoplayergames.org/gameframe/basket-random">Basket Random</option>
<option href="https://www.twoplayergames.org/gameframe/boxing-random?_gl=1*1biaxnl*_up*mq..*_ga*mjkxmzq3mtq5lje3mdi4ota1nza.*_ga_lsbvfhp4vg*mtcwmjg5mdu2os4xljaumtcwmjg5mdu2os4wljauma..">Boxing Random</option>
<option href="https://files.twoplayergames.org/files/games/mobile/o1/Connect_4/index.html">Connect 4</option>
<option href="https://slopegame.online/death-run-3d.embed">Death Run 3D</option>
<option href="https://defly.io">Defly.io</option>
<option href="https://diep.io">Diep.io</option>
<option href="https://drednot.io">Deep Space Airships</option>
<option href="https://drift-hunters.co/drift-hunters">Drift Hunters</option>
<option href="https://funny-shooter22222.jimrush.repl.co/">Funny Shooter 2</option>
<option href="https://www.twoplayergames.org/gameframe/get-on-top">Get On Top</option>
<option href="https://www.twoplayergames.org/gameframe/giant-tic-tac-toe">Giant Tic Tac Toe</option>
<option href="https://jklm.fun">JKLM.FUN</option>
<option href="https://krunker.io">Krunker</option>
<option href="https://www.madalingames.com">Madalin Games</option>
<option href="https://www.madalin-cars-multiplayer.com/webgl/M/mcm-webgl/index.html">Madalin Cars Multiplayer</option>
<option href="https://mope.io">Mope.io</option>
<option href="https://www.madalingames.com/madalingames/wp-content/uploads/games/webgl/S/srp2_webgl/index.html">Speed Racing Pro 2</option>
<option href="https://fireboyand-watergirl.co">Fireboy and Watergirl 1</option>
<option href="https://fireboyand-watergirl.co/fireboy-and-watergirl-2-light-temple">Fireboy and Watergirl 2</option>
<option href="https://fireboyand-watergirl.co/fireboy-and-watergirl-3-ice-temple">Fireboy and Watergirl 3</option>
<option href="https://fireboyand-watergirl.co/fireboy-and-watergirl-4-in-the-crystal-temple">Fireboy and Watergirl 4</option>
<option href="https://fireboyand-watergirl.co/fireboy-and-watergirl-5-elements">Fireboy and Watergirl 5</option>
<option href="https://fireboyand-watergirl.co/fireboy-and-watergirl-6-fairy-tales">Fireboy and Watergirl 6</option>
<option href="https://loopover.xyz">Loopover</option>
<option href="https://paper-io.com">Paper.io</option>
<option href="https://shapez.io">Shapez</option>
<option href="https://dimava.github.io/shapez/modZ/">ShapezModZ</option>
<option href="https://slither.io">Slither.io</option>
<option href="https://kdata1.com/2020/05/slope/">Slope</option>
<option href="https://smashkarts.io">Smash Karts</option>
<option href="https://www.twoplayergames.org/gameframe/soccer-random">Soccer Random</option>
<option href="https://sword-io-game.herokuapp.com/">Sword Battle</option>
<option href="https://www.lumpty.com/amusements/Games/Tetris/tetris.html">Tetris</option>
<option href="https://consentcdn.cookiebot.com/sdk/bc-v4.min.html">Tic Tac Toe Classic</option>
<option href="https://www.twoplayergames.org/gameframe/two-ball-3d">Two Ball 3D</option>
<option href="https://trex-runner.com">T-Rex Game</option>
<option href="https://www.twoplayergames.org">TwoPlayerGames</option>
<option href="https://consentcdn.cookiebot.com/sdk/bc-v4.min.html">Ultimate Tic Tac Toe</option>
<option href="https://www.twoplayergames.org/gameframe/uno-online">UNO Online</option>
<option href="https://venge.io">Venge.io</option>
<option href="https://www.twoplayergames.org/gameframe/volley-random">Volley Random</option>
<option href="https://zombs.io">Zombs.io</option>
<option href="https://zombsroyale.io/">Zombs Royal</option>
<option href="https://1v1.lol">1v1.lol</option>
<option href="https://play2048.co">2048</option>
<option href="https://8ball-pool.io">8 Ball Pool</option>
</select>
<button class="btn btn-secondary" id="ListButton" onclick="options_input();" style="font-family: Quicksand;">Go!</button>
<button class="btn btn-secondary" id="GetLinkButton" onclick="getLink();" style="font-family: Quicksand;">Copy</button>
<button class="btn btn-secondary" id="AddFavoritesButton" onclick="addFavorites();" style="font-family: Quicksand;">Add To Favorites</button>
</div>
<div class="needHidden email-area" id="contactSection" style="text-align: center; padding-right: 1em; display: inline-block;">
<a class="aTag" href="mailto:gameremailbypass@gmail.com?subject" style="font-family: Quicksand;">Send a link to
				add to toggle</a>
<p style="font-family: Quicksand, sans-serif;color: rgb(255,255,255);">Not
				all website will be added<br/>Send the
				full link and and name of it</p>
</div>
<div class="config needHidden">
<i class="fa-solid fa-gear fa-lg icon shift" onclick="toggleVisablility('toggleConfig');"></i>
<div id="toggleConfig" style="display: none;">
<input class="addMargin" id="TitleInput" onchange="changeTitle();" placeholder="Website Name" type="text"/>
<button class="btn btn-secondary addMargin" onclick="resetWebsite();">Reset</button>
<br/>
<input class="addMargin" id="ImageInput" onchange="changeImage();" placeholder="Icon" type="text"/>
<button class="btn btn-secondary addMargin" onclick="resetIcon();">Reset</button>
<br/>
<button class="btn btn-secondary addMargin" onclick="fetchDataAndDownload();">Download Local Version</button>
<br/>
<label>Toggle Background Animation: <input class="btn btn-secondary" id="toggleBg" onchange="testDynamic('toggleBg', 'BackgroundAnimation', 'tsparticles', bootMode=false, runFunction='loadBackground');" type="checkbox"/></label>
<br/>
<label>Toggle Social Media Menu: <input class="btn btn-secondary" id="toggleSc" onchange="testDynamic('toggleSc', 'SocialMedia', 'socialMedia');" type="checkbox"/></label>
<br/>
<label>Toggle About Section: <input class="btn btn-secondary" id="toggleAb" onchange="testDynamic('toggleAb', 'AboutSection', 'aboutSection');" type="checkbox"/></label>
<br/>
<label>Toggle Email Menu: <input class="btn btn-secondary" id="toggleEm" onchange="testDynamic('toggleEm', 'EmailMenu', 'contactSection');" type="checkbox"/></label>
<br/>
<label>Toggle Favorites Menu: <input class="btn btn-secondary" id="toggleFa" onchange="testDynamic('toggleFa', 'FavoritesMenu', 'favoritesMenu', bootMode=false, runFunction='checkFavorites');" type="checkbox"/></label>
</div>
</div>
<footer class="needHidden social-media" id="socialMedia" style="margin: 0.5rem;">
<h2>Social Media</h2>
<i class="fa-brands fa-github icon"></i> <a href="https://github.com/GamerVerse722">GamerVerse722</a>
<br/>
<i class="fa-brands fa-youtube icon"></i> <a href="https://www.youtube.com/@GamerVerse/featured">Gamer Verse</a>
<br/>
<i class="fa-brands fa-twitch icon"></i> <a href="https://www.twitch.tv/gamer_verse">Gamer_Verse</a>
<br/>
<i class="fa-brands fa-discord icon"></i> <a href="https://discord.gg/AjE6VMmRJ4">Discord Server</a>
</footer>
<div class="needHidden TopLeftMove">
<div class="CurrentVersionDiv">
<p>Current Version: <span id="ManualVersion"></span>
<br/>
<a href="#" id="download-html-file" onclick="fetchDataAndDownload();" style="visibility: hidden;">(Update Available)</a></p>
</div>
<div id="favoritesMenu" style="width: 15rem; border: solid white 1px;">
<h2 style="text-align: center;">Favorites</h2>
<div id="container">
</div>
<button class="btn btn-secondary" onclick="resetFavorites();" style="font-family: Quicksand;">Reset</button>
</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://unpkg.com/tsparticles@1.34.0/tsparticles.min.js"></script>
<script>
function loadBackground() {
  tsParticles.load("tsparticles",{
    "background": {
      "color": {
        "value": "#0d0d0d"
      },
      "position": "50% 50%",
      "repeat": "no-repeat",
      "size": "cover"
    },
    "fullScreen": {
      "enable": true,
      "zIndex": 1
    },
    "interactivity": {
      "events": {
        "onClick": {
          "enable": true,
          "mode": "push"
        },
        "onHover": {
          "enable": true,
          "mode": "grab",
          "parallax": {
            "enable": true,
            "force": 20
          }
        }
      },
      "modes": {
        "bubble": {
          "distance": 400,
          "duration": 2,
          "opacity": 0.8,
          "size": 40
        },
        "grab": {
          "distance": 300
        }
      }
    },
    "particles": {
      "color": {
        "value": "#ffffff"
      },
      "links": {
        "color": {
          "value": "#ffffff"
        },
        "distance": 150,
        "enable": true,
        "opacity": 0.4
      },
      "move": {
        "attract": {
          "rotate": {
            "x": 600,
            "y": 1200
          }
        },
        "enable": true,
        "outModes": {
          "bottom": "out",
          "left": "out",
          "right": "out",
          "top": "out"
        }
      },
      "number": {
        "density": {
          "enable": true
        }
      },
      "opacity": {
        "random": {
          "enable": true
        },
        "value": {
          "min": 0.1,
          "max": 0.5
        },
        "animation": {
          "enable": true,
          "speed": 3,
          "minimumValue": 0.1
        }
      },
      "size": {
        "random": {
          "enable": false
        },
        "value": {
          "min": 1,
          "max": 5
        },
        "animation": {
          "enable": true,
          "speed": 20,
          "minimumValue": 0.1
        }
      }
    }
  });
}</script><script>
console.clear();
function checkTitle() {
	let dataSaved = localStorage.getItem("ChangedTitle");
	if (dataSaved == null || dataSaved == Object || dataSaved == 'null') {
		localStorage.setItem("ChangedTitle", 'null');
	}
	if (dataSaved != null && dataSaved != "null") {
		document.getElementById("TitleInput").value = dataSaved;
		document.title = dataSaved;
	}
}
function checkIcon() {
	let dataSaved = localStorage.getItem("ImageURL");
	if (dataSaved == null || dataSaved == Object || dataSaved == 'null') {
		localStorage.setItem("ImageURL", 'null');
	}
	if (dataSaved != null && dataSaved != 'null') {
		document.getElementById("ImageInput").value = dataSaved;
		changeImage(dataSaved);
	}
}
function checkFavorites() {
	let dataSaved = localStorage.getItem("FavoritesList");
	if (dataSaved == null || dataSaved == Object || dataSaved == 'null') {
		localStorage.setItem("FavoritesList", JSON.stringify([]));
        updateFavorites();
	}
	if (dataSaved != null && dataSaved != "null") {
		updateFavorites();
	}
}
function dynamicIframe(url) {
	var particl = document.getElementById('tsparticles')
	var ifr = document.getElementById('ifr');
	[].forEach.call(document.querySelectorAll('.needHidden'), function (el) {
		el.remove();
	})
	particl.remove();
	ifr.visibility = 'visible';
	ifr.style = 'position:fixed; top:0; left:0; bottom:0; right:0; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;';
	ifr.src = url;
}
function url_input(){
	var input = document.getElementById('urlInput').value;
	dynamicIframe(input);
}
function options_input(){
	var e = document.getElementById("MySelectMenu");
	var newSrc = e.options[e.selectedIndex].getAttribute("href");
	if (newSrc != "Blank") {
		dynamicIframe(newSrc);
	}
}
function startIframe() {
	var input = document.getElementById('urlInput');
	var particl = document.getElementById('tsparticles')
	var ifr = document.getElementById('ifr');
	[].forEach.call(document.querySelectorAll('.needHidden'), function (el) {
		el.remove();
	})
	particl.remove();
	var inputVal;
	inputVal = input.value;
	ifr.visibility = 'visible';
	ifr.style = 'position:fixed; top:0; left:0; bottom:0; right:0; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;';
	ifr.src = inputVal;
}
function newSrc() {
	var e = document.getElementById("MySelectMenu");
	var newSrc = e.options[e.selectedIndex].getAttribute("href");
	var particl = document.getElementById('tsparticles')
	var ifr = document.getElementById('ifr');
	if (newSrc != "Blank") {
		[].forEach.call(document.querySelectorAll('.needHidden'), function (el) {
			el.remove();
		});
		particl.remove();
		ifr.visibility = 'visible';
		ifr.style = 'position:fixed; top:0; left:0; bottom:0; right:0; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;';
		ifr.src = newSrc;
	}
}
function fallbackCopyTextToClipboard(text) {
	var textArea = document.createElement("textarea");
	textArea.value = text;
	// Avoid scrolling to bottom
	textArea.style.top = "0";
	textArea.style.left = "0";
	textArea.style.position = "fixed";
	document.body.appendChild(textArea);
	textArea.focus();
	textArea.select();
	try {
		var successful = document.execCommand('copy');
		var msg = successful ? 'successful' : 'unsuccessful';
		console.log('Fallback: Copying text command was ' + msg);
	} catch (err) {
		console.error('Fallback: Oops, unable to copy', err);
	}
	document.body.removeChild(textArea);
}
function copyTextToClipboard(text) {
	if (!navigator.clipboard) {
		fallbackCopyTextToClipboard(text);
		return;
	}
	navigator.clipboard.writeText(text).then(function () {
		console.log('Async: Successful ' + text + ' was copied to clipboard!');
	}, function (err) {
		console.error('Async: Could not copy ' + text + ' to clipboard: ', err);
	});
}
function getLink() {
	var e = document.getElementById("MySelectMenu");
	var newSrc = e.options[e.selectedIndex].getAttribute("href");
	if (newSrc != "Blank") {
		var myClipboard = newSrc;
		copyTextToClipboard(myClipboard);
	}
}
function changeTitle() {
	var titleChange = document.getElementById("TitleInput").value;
	localStorage.setItem("ChangedTitle", titleChange)
	document.title = titleChange;
}
function isImage(url) {
	return /\.(jpg|jpeg|png|webp|avif|gif|svg|ico)$/.test(url);
}
function changeImage(custom = false) {
	if (custom == false) {
		var imageURL = document.getElementById("ImageInput").value;
	} else {
		var imageURL = custom;
	}
	if (isImage(imageURL)) {
		var existingFavicon = document.querySelector('link[rel="shortcut icon"]');
		var newFavicon = document.createElement('link');
		newFavicon.rel = 'shortcut icon';
		newFavicon.type = 'image/jpeg';
		newFavicon.href = imageURL;
		localStorage.setItem("ImageURL", imageURL)
		if (existingFavicon) {
			existingFavicon.href = newFavicon.href;
		} else {
			document.head.appendChild(newFavicon);
		}
	}
}
function resetWebsite() {
	document.getElementById('TitleInput').value = "";
	localStorage.setItem("ChangedTitle", 'null')
	document.title = "Goguardian Bypass"
}
function resetIcon() {
	document.getElementById('ImageInput').value = "";
	var existingFavicon = document.querySelector('link[rel="shortcut icon"]');
	var newFavicon = document.createElement('link');
	newFavicon.rel = 'shortcut icon';
	newFavicon.href = 'assets/image/Logo.JPG';
	localStorage.setItem("ImageURL", null)
	if (existingFavicon) {
		existingFavicon.href = newFavicon.href;
	} else {
		document.head.appendChild(newFavicon);
	}
}
function fetchDataAndDownload() {
	// Fetch data from the URL
	const url = "https://raw.githubusercontent.com/GamerVerse722/Updated-GoGuardian-Bypass/main/github/localVersion.html";
	const fileName = "LocalVersion.html";
	fetch(url)
		.then(response => response.blob()) // Get the response as Blob
		.then(blob => {
			// Create a Blob from the response data
			const blobURL = URL.createObjectURL(blob);
			// Create a download link
			const downloadLink = document.createElement('a');
			downloadLink.href = blobURL;
			downloadLink.download = fileName; // Set the desired file name
			downloadLink.textContent = 'Click here to download'; // Optional text for the link
			// Append the download link to the document body
			document.body.appendChild(downloadLink);
			// Programmatically trigger a click event on the download link
			downloadLink.click();
			// Remove the download link from the document
			document.body.removeChild(downloadLink);
			// Revoke the Blob URL to free up resources
			URL.revokeObjectURL(blobURL);
		})
		.catch(error => {
			console.error('Error fetching data:', error);
		});
}
function toggleVisablility(changeId) {
	var change = document.getElementById(changeId);
	if (change.style.display == 'block') {
		change.style.display = 'none'
	} else {
		change.style.display = 'block'
	}
}
function testDynamic(markId, localDataId, hideSection, bootmode = false, runFunction = false) {
	console.log(markId, localDataId, hideSection, bootmode, runFunction)
	let checkMark = document.getElementById(markId);
	if (bootmode == false) {
		if (checkMark.checked == true) {
			localStorage.setItem(localDataId, 'checked');
		} else if (checkMark.checked == false) {
			localStorage.setItem(localDataId, 'unchecked');
		}
	}
	let dataSaved = localStorage.getItem(localDataId);
	if (dataSaved == null || dataSaved == Object || dataSaved == 'null') {
		localStorage.setItem(localDataId, 'checked');
		checkMark.checked = true;
		if (runFunction != false) {
			if (runFunction == 'loadBackground') {
				loadBackground();
			}
			if (runFunction == 'checkFavorites') {
				checkFavorites();
			}
		}
	}
	if (dataSaved != null && dataSaved != "null") {
		var social = document.getElementById(hideSection);
		if (dataSaved == 'checked') {
			if (runFunction != false) {
				if (runFunction == 'loadBackground') {
					loadBackground();
				}
				if (runFunction == 'checkFavorites') {
					checkFavorites();
				}
			}
			checkMark.checked = true;
			localStorage.setItem(localDataId, 'checked');
			social.style.display = 'block';
		}
		else if (dataSaved == 'unchecked') {
			checkMark.checked = false;
			localStorage.setItem(localDataId, 'unchecked');
			social.style.display = 'none';
		}
	}
}
function updateFavorites() {
    const favorites = document.getElementById('container');
    let table = document.createElement('table');
    let testList = JSON.parse(localStorage.getItem('FavoritesList'));
    favorites.innerHTML = '';
    currentIndex = 0;
    for (let website of testList) {
        let a_element = document.createElement('a');
        let up_element = document.createElement('i');
        let down_element = document.createElement('i');
        let remove_element = document.createElement('i');
        let elements = document.createElement('tr');
        let a_td = document.createElement('td');
        let up_td = document.createElement('td');
        let down_td = document.createElement('td');
        let remove_td = document.createElement('td');
        a_element.innerHTML = website[0];
        a_element.setAttribute('onclick', `current('${website[1]}');`);
        
        if (currentIndex != 0) {
            up_element.setAttribute('class', 'fa-solid fa-up-long');
            up_element.setAttribute('onclick', `up(${currentIndex});`);
        }
        
        if (currentIndex != testList.length - 1) {
            down_element.setAttribute('class', 'fa-solid fa-down-long');
            down_element.setAttribute('onclick', `down(${currentIndex});`);
        }
        remove_element.setAttribute('class', 'fa-solid fa-xmark');
        remove_element.setAttribute('onclick', `remove(${currentIndex});`);
        
        remove_td.appendChild(remove_element);
        a_td.appendChild(a_element);
        up_td.appendChild(up_element);
        down_td.appendChild(down_element);
        elements.appendChild(remove_td);
        elements.appendChild(a_td);
        elements.appendChild(up_td);
        elements.appendChild(down_td);
        table.appendChild(elements);
        favorites.appendChild(table);
        currentIndex++
    }
}
function current(x){
    dynamicIframe(x);
}
function up(x){
    let testList = JSON.parse(localStorage.getItem('FavoritesList'));
    if (x <= testList.length - 1 && x >= 0) {
        let element = testList.splice(x, 1)[0];
        testList.splice(x - 1, 0, element);
    }
    localStorage.setItem("FavoritesList", JSON.stringify(testList));
    updateFavorites();
}
function down(x){
    let testList = JSON.parse(localStorage.getItem('FavoritesList'));
    if (x >= 0 && x <= testList.length - 1) {
        let element = testList.splice(x, 1)[0];
        testList.splice(x + 1, 0, element);
    }
    localStorage.setItem("FavoritesList", JSON.stringify(testList));
    updateFavorites();
}
function remove(x){
    let testList = JSON.parse(localStorage.getItem('FavoritesList'));
    testList.splice(x, 1);
    localStorage.setItem("FavoritesList", JSON.stringify(testList));
    updateFavorites();
}
function addFavorites() {
	var e = document.getElementById("MySelectMenu");
	var newSrc = e.options[e.selectedIndex];
	let testList = JSON.parse(localStorage.getItem('FavoritesList'));
	let addNewItem = [newSrc.innerHTML, newSrc.getAttribute("href")];
	if (testList.some(arr => JSON.stringify(arr) === JSON.stringify(addNewItem)) == false) {
		testList.push(addNewItem);
		localStorage.setItem("FavoritesList", JSON.stringify(testList));
	}
	updateFavorites();
}
function resetFavorites() {
    localStorage.setItem("FavoritesList", JSON.stringify([]));
    updateFavorites();
}
checkTitle();
checkIcon();
testDynamic('toggleBg', 'BackgroundAnimation', 'tsparticles', bootmode = true, runFunction = 'loadBackground');
testDynamic('toggleSc', 'SocialMedia', 'socialMedia', bootmode = true);
testDynamic('toggleEm', 'EmailMenu', 'contactSection', bootmode = true);
testDynamic('toggleAb', 'AboutSection', 'aboutSection', bootmode = true);
testDynamic('toggleFa', 'FavoritesMenu', 'favoritesMenu', bootmode = true, runFunction = 'checkFavorites');
document.getElementById('ManualVersion').innerHTML = "V1.26"
req = new XMLHttpRequest();
req.open('GET', 'https://raw.githubusercontent.com/GamerVerse722/GoGuardian-Bypass/main/assets/js/currentVersion.js');
req.onload = function () {
	eval(this.responseText + 'versionGrabber();');
};
req.send();
window.addEventListener('beforeunload', function (e) {
	e.preventDefault();
	e.returnValue = '';
});
window.onload = function () {
	let newest = Number(document.getElementById("newestVersion").innerHTML.slice(1))
	let manual = Number(document.getElementById('ManualVersion').innerHTML.slice(1))
	console.log('Newest Version Avaliable: ' + newest)
	console.log('Current Version: ' + manual)
	if (manual < newest) {
		console.log("updated")
		document.getElementById('download-html-file').style.visibility = 'visible';
	} else {
		document.getElementById('download-html-file').style.visibility = 'hidden';
	}
}</script></body>
</html>
";
    document.writeln(atob(html));
    document.title = title_Name;
    document.close();
}
codeRunner();